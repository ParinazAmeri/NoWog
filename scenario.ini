[outputs]
# Each scenario will generate two input files for NoWog: LOADING stage file and WORKLOAD stage file
# To execute each stage, add the following path into input file paths in config.ini and run main.py.

load_BNF = scenario_data/load.txt
workload_BNF = scenario_data/workload.txt





[load_dataset]
# ------------------------------
# Collection size. All workload will be executed only in one collection.
# Database and collection name can be edited in congif.ini before execution.

coll_size = 1000

# ------------------------------
# <write> phrase defined in EBNF_grammar.txt.
# Used in all insert operation. For find and update operation, program will
# randomly choose attributes from all attributes provided in this phrase

write = {(A1: True)(A2: False)(A3: text_write)(A4: num_match)(A5: Array.Bool)(A6: Array.Text)(A7: Array.Num)(A8: (A1: True)(A2: False)(A3: text_write)(A4: num_match)(A5: Array.Bool)(A6: Array.Text)(A7: Array.Num))(A9: (A8: (A1: True)(A2: False)(A3: text_write)(A4: num_match)(A5: Array.Bool)(A6: Array.Text)(A7: Array.Num)))}





[workload]

# ------------------------------
# generate {simple, complicate} operation
# simple: no nested attributes
# complicate: only nested attributes, e.g. {'A1.B1.C1': 130416}

complexity = simple

# ------------------------------
# time period of all workload

start_time = 0
end_time = 30

# ------------------------------
# The total amount workloads of all types of operations.

total_workload = 1000

# ------------------------------
# scenario type: {read_only, update_only, insert_only, read_mostly, update_mostly, custom}
# 	read_only: 100% read
# 	update_only: 100% update
# 	insert_only: 100% insert
# 	read_mostly: 95% read and 5% update
# 	update_mostly: 50% read and 50% update
# 	custom: customize your ratio in [ratio] section

type = read_mostly





[ratio]

# only valid when type is "custom"
# Note: Sum of all ratio should be 100.

read = 50
update = 50
insert = 0
